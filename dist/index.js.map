{"version":3,"file":"index.js","sources":["../src/logger.ts","../src/types/extension.ts","../node_modules/lz-string/libs/lz-string.js","../src/types/predicate.ts","../src/utility/date.ts","../src/types/action.ts","../src/extension-manager.ts","../src/actions/AddAriaLabels.ts","../src/predicates/HasWordpress.ts","../src/extensions/js/wordpress/AddAriaLabels.ts","../src/actions/AddSrClasses.ts","../src/predicates/HasBootstrap.ts","../src/extensions/css/bootstrap/AddScreenReaderOnlyClasses.ts","../src/actions/DisableJqueryFx.ts","../src/predicates/HasJquery.ts","../src/extensions/js/jquery/DisableAnimations.ts","../src/index.ts"],"sourcesContent":["import config from 'config';\r\nimport pkg from '../package.json';\r\n\r\nexport class Logger {\r\n  static debug(message: string) {\r\n    if (!config.debug) return;\r\n    console.debug(`[${pkg.name}]: ${message}`);\r\n  }\r\n  static info(message: string) {\r\n    if (!config.debug) return;\r\n    console.info(`[${pkg.name}]: ${message}`);\r\n  }\r\n  static log(message: string) {\r\n    if (!config.debug) return;\r\n    console.log(`[${pkg.name}]: ${message}`);\r\n  }\r\n  static warn(message: string) {\r\n    if (!config.debug) return;\r\n    console.warn(`[${pkg.name}]: ${message}`);\r\n  }\r\n}\r\n\r\nexport default Logger;\r\n","// Load: When extension is first loaded into page.\n// Execute: When extension function is executed.\n// WidgetLoad: When plugins load\n// PluginExecute: When plugins fire\nimport { ActionFunction } from 'types/function';\nimport { Action } from 'types/action';\nimport { Predicate } from 'types/predicate';\nimport Logger from '@/logger';\n\nexport type ActionFunctionType = null | ActionFunction | Array<ActionFunction>;\n\nexport interface IExtension {\n  // Actual extension actions to perform.\n  action: Action | Array<Action>;\n\n  // Description of what the extension does.\n  description: string;\n\n  // Enabled\n  enabled: boolean;\n\n  // Timestamp when extension fired, if applicable.\n  firedAt?: Date | null;\n\n  name: string;\n\n  // Zero or more functions that must be true to execute extension.\n  predicate?: Predicate | Array<Predicate>;\n\n  // Before extension load\n  beforeLoad?: ActionFunctionType;\n  // After extension load\n  afterLoad?: ActionFunctionType;\n\n  // Before execute\n  beforeExecute?: ActionFunctionType;\n  // After execute\n  afterExecute?: ActionFunctionType;\n\n  // Before widget load\n  beforeWidgetLoad?: ActionFunctionType;\n  // After widget load\n  afterWidgetLoad?: ActionFunctionType;\n\n  // Before load\n  beforeWidgetExecute?: ActionFunctionType;\n  // After load\n  afterWidgetExecute?: ActionFunctionType;\n}\n\nexport interface IExtensionsParams {\n  action: Action | Array<Action>;\n  description: string;\n  enabled?: boolean;\n  name?: string;\n  predicate?: Predicate | Array<Predicate>;\n}\n\nexport class Extension implements IExtension {\n  action: Action | Array<Action>;\n  description: string = '';\n  enabled: boolean = true;\n  firedAt?: Date | null;\n  name: string = '';\n  predicate?: Predicate | Array<Predicate>;\n\n  constructor(params: IExtensionsParams) {\n    this.action = params.action;\n    this.description = params.description;\n    this.enabled = params.enabled !== undefined ? params.enabled : true;\n    this.name = params.name ? params.name : '';\n    this.predicate = params.predicate;\n  }\n\n  predicatesPassed(): boolean {\n    if (!this.predicate) return false;\n    if (Array.isArray(this.predicate)) {\n      for (const predicate of this.predicate) {\n        if (!predicate.passedAt) {\n          Logger.log(`  Predicate '${predicate.name}' failed.`);\n          return false;\n        }\n      }\n    } else {\n      if (!this.predicate.passedAt) {\n        Logger.log(`  Predicate '${this.predicate.name}' failed.`);\n        return false;\n      }\n    }\n    return true;\n  }\n\n  execute(): Date | void {\n    this.runPredicates();\n    if (!this.predicatesPassed()) {\n      Logger.warn(`  Predicate(s) failed, cancelling.`);\n      return;\n    }\n\n    this.firedAt = null;\n    Logger.log(`  Predicates passed, running actions.`);\n    this.runActions();\n    this.firedAt = new Date();\n    return this.firedAt;\n  }\n\n  runActions(): boolean {\n    if (!this.action) return false;\n    if (Array.isArray(this.action)) {\n      this.action.forEach((action: Action) => {\n        action.run();\n      });\n    } else {\n      this.action.run();\n    }\n    return true;\n  }\n\n  runPredicates(): boolean {\n    if (!this.predicate) return false;\n    if (Array.isArray(this.predicate)) {\n      this.predicate.forEach((predicate: Predicate) => {\n        predicate.run();\n      });\n    } else {\n      this.predicate.run();\n    }\n    return true;\n  }\n\n  toJson(): string {\n    return JSON.stringify(this.toObject());\n  }\n\n  toObject(): any {\n    let actions: any = [];\n    let predicates: any = [];\n    if (this.action) {\n      if (Array.isArray(this.action)) {\n        actions = this.action.map(action => action.toJson());\n      } else {\n        actions.push(this.action.toJson());\n      }\n    }\n\n    if (this.predicate) {\n      if (Array.isArray(this.predicate)) {\n        predicates = this.predicate.map(predicate => predicate.toJson());\n      } else {\n        predicates.push(this.predicate.toJson());\n      }\n    }\n\n    let obj: any = {\n      description: this.description,\n      enabled: this.enabled,\n      firedAt: this.firedAt,\n      name: this.name\n    };\n\n    if (actions.length > 0) {\n      obj.action = actions;\n    }\n\n    if (predicates.length > 0) {\n      obj.predicate = predicates;\n    }\n\n    return obj;\n  }\n\n  toString(): string {\n    return JSON.stringify(this.toObject());\n  }\n}\n","// Copyright (c) 2013 Pieroxy <pieroxy@pieroxy.net>\n// This work is free. You can redistribute it and/or modify it\n// under the terms of the WTFPL, Version 2\n// For more information see LICENSE.txt or http://www.wtfpl.net/\n//\n// For more information, the home page:\n// http://pieroxy.net/blog/pages/lz-string/testing.html\n//\n// LZ-based compression algorithm, version 1.4.4\nvar LZString = (function() {\n\n// private property\nvar f = String.fromCharCode;\nvar keyStrBase64 = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=\";\nvar keyStrUriSafe = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+-$\";\nvar baseReverseDic = {};\n\nfunction getBaseValue(alphabet, character) {\n  if (!baseReverseDic[alphabet]) {\n    baseReverseDic[alphabet] = {};\n    for (var i=0 ; i<alphabet.length ; i++) {\n      baseReverseDic[alphabet][alphabet.charAt(i)] = i;\n    }\n  }\n  return baseReverseDic[alphabet][character];\n}\n\nvar LZString = {\n  compressToBase64 : function (input) {\n    if (input == null) return \"\";\n    var res = LZString._compress(input, 6, function(a){return keyStrBase64.charAt(a);});\n    switch (res.length % 4) { // To produce valid Base64\n    default: // When could this happen ?\n    case 0 : return res;\n    case 1 : return res+\"===\";\n    case 2 : return res+\"==\";\n    case 3 : return res+\"=\";\n    }\n  },\n\n  decompressFromBase64 : function (input) {\n    if (input == null) return \"\";\n    if (input == \"\") return null;\n    return LZString._decompress(input.length, 32, function(index) { return getBaseValue(keyStrBase64, input.charAt(index)); });\n  },\n\n  compressToUTF16 : function (input) {\n    if (input == null) return \"\";\n    return LZString._compress(input, 15, function(a){return f(a+32);}) + \" \";\n  },\n\n  decompressFromUTF16: function (compressed) {\n    if (compressed == null) return \"\";\n    if (compressed == \"\") return null;\n    return LZString._decompress(compressed.length, 16384, function(index) { return compressed.charCodeAt(index) - 32; });\n  },\n\n  //compress into uint8array (UCS-2 big endian format)\n  compressToUint8Array: function (uncompressed) {\n    var compressed = LZString.compress(uncompressed);\n    var buf=new Uint8Array(compressed.length*2); // 2 bytes per character\n\n    for (var i=0, TotalLen=compressed.length; i<TotalLen; i++) {\n      var current_value = compressed.charCodeAt(i);\n      buf[i*2] = current_value >>> 8;\n      buf[i*2+1] = current_value % 256;\n    }\n    return buf;\n  },\n\n  //decompress from uint8array (UCS-2 big endian format)\n  decompressFromUint8Array:function (compressed) {\n    if (compressed===null || compressed===undefined){\n        return LZString.decompress(compressed);\n    } else {\n        var buf=new Array(compressed.length/2); // 2 bytes per character\n        for (var i=0, TotalLen=buf.length; i<TotalLen; i++) {\n          buf[i]=compressed[i*2]*256+compressed[i*2+1];\n        }\n\n        var result = [];\n        buf.forEach(function (c) {\n          result.push(f(c));\n        });\n        return LZString.decompress(result.join(''));\n\n    }\n\n  },\n\n\n  //compress into a string that is already URI encoded\n  compressToEncodedURIComponent: function (input) {\n    if (input == null) return \"\";\n    return LZString._compress(input, 6, function(a){return keyStrUriSafe.charAt(a);});\n  },\n\n  //decompress from an output of compressToEncodedURIComponent\n  decompressFromEncodedURIComponent:function (input) {\n    if (input == null) return \"\";\n    if (input == \"\") return null;\n    input = input.replace(/ /g, \"+\");\n    return LZString._decompress(input.length, 32, function(index) { return getBaseValue(keyStrUriSafe, input.charAt(index)); });\n  },\n\n  compress: function (uncompressed) {\n    return LZString._compress(uncompressed, 16, function(a){return f(a);});\n  },\n  _compress: function (uncompressed, bitsPerChar, getCharFromInt) {\n    if (uncompressed == null) return \"\";\n    var i, value,\n        context_dictionary= {},\n        context_dictionaryToCreate= {},\n        context_c=\"\",\n        context_wc=\"\",\n        context_w=\"\",\n        context_enlargeIn= 2, // Compensate for the first entry which should not count\n        context_dictSize= 3,\n        context_numBits= 2,\n        context_data=[],\n        context_data_val=0,\n        context_data_position=0,\n        ii;\n\n    for (ii = 0; ii < uncompressed.length; ii += 1) {\n      context_c = uncompressed.charAt(ii);\n      if (!Object.prototype.hasOwnProperty.call(context_dictionary,context_c)) {\n        context_dictionary[context_c] = context_dictSize++;\n        context_dictionaryToCreate[context_c] = true;\n      }\n\n      context_wc = context_w + context_c;\n      if (Object.prototype.hasOwnProperty.call(context_dictionary,context_wc)) {\n        context_w = context_wc;\n      } else {\n        if (Object.prototype.hasOwnProperty.call(context_dictionaryToCreate,context_w)) {\n          if (context_w.charCodeAt(0)<256) {\n            for (i=0 ; i<context_numBits ; i++) {\n              context_data_val = (context_data_val << 1);\n              if (context_data_position == bitsPerChar-1) {\n                context_data_position = 0;\n                context_data.push(getCharFromInt(context_data_val));\n                context_data_val = 0;\n              } else {\n                context_data_position++;\n              }\n            }\n            value = context_w.charCodeAt(0);\n            for (i=0 ; i<8 ; i++) {\n              context_data_val = (context_data_val << 1) | (value&1);\n              if (context_data_position == bitsPerChar-1) {\n                context_data_position = 0;\n                context_data.push(getCharFromInt(context_data_val));\n                context_data_val = 0;\n              } else {\n                context_data_position++;\n              }\n              value = value >> 1;\n            }\n          } else {\n            value = 1;\n            for (i=0 ; i<context_numBits ; i++) {\n              context_data_val = (context_data_val << 1) | value;\n              if (context_data_position ==bitsPerChar-1) {\n                context_data_position = 0;\n                context_data.push(getCharFromInt(context_data_val));\n                context_data_val = 0;\n              } else {\n                context_data_position++;\n              }\n              value = 0;\n            }\n            value = context_w.charCodeAt(0);\n            for (i=0 ; i<16 ; i++) {\n              context_data_val = (context_data_val << 1) | (value&1);\n              if (context_data_position == bitsPerChar-1) {\n                context_data_position = 0;\n                context_data.push(getCharFromInt(context_data_val));\n                context_data_val = 0;\n              } else {\n                context_data_position++;\n              }\n              value = value >> 1;\n            }\n          }\n          context_enlargeIn--;\n          if (context_enlargeIn == 0) {\n            context_enlargeIn = Math.pow(2, context_numBits);\n            context_numBits++;\n          }\n          delete context_dictionaryToCreate[context_w];\n        } else {\n          value = context_dictionary[context_w];\n          for (i=0 ; i<context_numBits ; i++) {\n            context_data_val = (context_data_val << 1) | (value&1);\n            if (context_data_position == bitsPerChar-1) {\n              context_data_position = 0;\n              context_data.push(getCharFromInt(context_data_val));\n              context_data_val = 0;\n            } else {\n              context_data_position++;\n            }\n            value = value >> 1;\n          }\n\n\n        }\n        context_enlargeIn--;\n        if (context_enlargeIn == 0) {\n          context_enlargeIn = Math.pow(2, context_numBits);\n          context_numBits++;\n        }\n        // Add wc to the dictionary.\n        context_dictionary[context_wc] = context_dictSize++;\n        context_w = String(context_c);\n      }\n    }\n\n    // Output the code for w.\n    if (context_w !== \"\") {\n      if (Object.prototype.hasOwnProperty.call(context_dictionaryToCreate,context_w)) {\n        if (context_w.charCodeAt(0)<256) {\n          for (i=0 ; i<context_numBits ; i++) {\n            context_data_val = (context_data_val << 1);\n            if (context_data_position == bitsPerChar-1) {\n              context_data_position = 0;\n              context_data.push(getCharFromInt(context_data_val));\n              context_data_val = 0;\n            } else {\n              context_data_position++;\n            }\n          }\n          value = context_w.charCodeAt(0);\n          for (i=0 ; i<8 ; i++) {\n            context_data_val = (context_data_val << 1) | (value&1);\n            if (context_data_position == bitsPerChar-1) {\n              context_data_position = 0;\n              context_data.push(getCharFromInt(context_data_val));\n              context_data_val = 0;\n            } else {\n              context_data_position++;\n            }\n            value = value >> 1;\n          }\n        } else {\n          value = 1;\n          for (i=0 ; i<context_numBits ; i++) {\n            context_data_val = (context_data_val << 1) | value;\n            if (context_data_position == bitsPerChar-1) {\n              context_data_position = 0;\n              context_data.push(getCharFromInt(context_data_val));\n              context_data_val = 0;\n            } else {\n              context_data_position++;\n            }\n            value = 0;\n          }\n          value = context_w.charCodeAt(0);\n          for (i=0 ; i<16 ; i++) {\n            context_data_val = (context_data_val << 1) | (value&1);\n            if (context_data_position == bitsPerChar-1) {\n              context_data_position = 0;\n              context_data.push(getCharFromInt(context_data_val));\n              context_data_val = 0;\n            } else {\n              context_data_position++;\n            }\n            value = value >> 1;\n          }\n        }\n        context_enlargeIn--;\n        if (context_enlargeIn == 0) {\n          context_enlargeIn = Math.pow(2, context_numBits);\n          context_numBits++;\n        }\n        delete context_dictionaryToCreate[context_w];\n      } else {\n        value = context_dictionary[context_w];\n        for (i=0 ; i<context_numBits ; i++) {\n          context_data_val = (context_data_val << 1) | (value&1);\n          if (context_data_position == bitsPerChar-1) {\n            context_data_position = 0;\n            context_data.push(getCharFromInt(context_data_val));\n            context_data_val = 0;\n          } else {\n            context_data_position++;\n          }\n          value = value >> 1;\n        }\n\n\n      }\n      context_enlargeIn--;\n      if (context_enlargeIn == 0) {\n        context_enlargeIn = Math.pow(2, context_numBits);\n        context_numBits++;\n      }\n    }\n\n    // Mark the end of the stream\n    value = 2;\n    for (i=0 ; i<context_numBits ; i++) {\n      context_data_val = (context_data_val << 1) | (value&1);\n      if (context_data_position == bitsPerChar-1) {\n        context_data_position = 0;\n        context_data.push(getCharFromInt(context_data_val));\n        context_data_val = 0;\n      } else {\n        context_data_position++;\n      }\n      value = value >> 1;\n    }\n\n    // Flush the last char\n    while (true) {\n      context_data_val = (context_data_val << 1);\n      if (context_data_position == bitsPerChar-1) {\n        context_data.push(getCharFromInt(context_data_val));\n        break;\n      }\n      else context_data_position++;\n    }\n    return context_data.join('');\n  },\n\n  decompress: function (compressed) {\n    if (compressed == null) return \"\";\n    if (compressed == \"\") return null;\n    return LZString._decompress(compressed.length, 32768, function(index) { return compressed.charCodeAt(index); });\n  },\n\n  _decompress: function (length, resetValue, getNextValue) {\n    var dictionary = [],\n        next,\n        enlargeIn = 4,\n        dictSize = 4,\n        numBits = 3,\n        entry = \"\",\n        result = [],\n        i,\n        w,\n        bits, resb, maxpower, power,\n        c,\n        data = {val:getNextValue(0), position:resetValue, index:1};\n\n    for (i = 0; i < 3; i += 1) {\n      dictionary[i] = i;\n    }\n\n    bits = 0;\n    maxpower = Math.pow(2,2);\n    power=1;\n    while (power!=maxpower) {\n      resb = data.val & data.position;\n      data.position >>= 1;\n      if (data.position == 0) {\n        data.position = resetValue;\n        data.val = getNextValue(data.index++);\n      }\n      bits |= (resb>0 ? 1 : 0) * power;\n      power <<= 1;\n    }\n\n    switch (next = bits) {\n      case 0:\n          bits = 0;\n          maxpower = Math.pow(2,8);\n          power=1;\n          while (power!=maxpower) {\n            resb = data.val & data.position;\n            data.position >>= 1;\n            if (data.position == 0) {\n              data.position = resetValue;\n              data.val = getNextValue(data.index++);\n            }\n            bits |= (resb>0 ? 1 : 0) * power;\n            power <<= 1;\n          }\n        c = f(bits);\n        break;\n      case 1:\n          bits = 0;\n          maxpower = Math.pow(2,16);\n          power=1;\n          while (power!=maxpower) {\n            resb = data.val & data.position;\n            data.position >>= 1;\n            if (data.position == 0) {\n              data.position = resetValue;\n              data.val = getNextValue(data.index++);\n            }\n            bits |= (resb>0 ? 1 : 0) * power;\n            power <<= 1;\n          }\n        c = f(bits);\n        break;\n      case 2:\n        return \"\";\n    }\n    dictionary[3] = c;\n    w = c;\n    result.push(c);\n    while (true) {\n      if (data.index > length) {\n        return \"\";\n      }\n\n      bits = 0;\n      maxpower = Math.pow(2,numBits);\n      power=1;\n      while (power!=maxpower) {\n        resb = data.val & data.position;\n        data.position >>= 1;\n        if (data.position == 0) {\n          data.position = resetValue;\n          data.val = getNextValue(data.index++);\n        }\n        bits |= (resb>0 ? 1 : 0) * power;\n        power <<= 1;\n      }\n\n      switch (c = bits) {\n        case 0:\n          bits = 0;\n          maxpower = Math.pow(2,8);\n          power=1;\n          while (power!=maxpower) {\n            resb = data.val & data.position;\n            data.position >>= 1;\n            if (data.position == 0) {\n              data.position = resetValue;\n              data.val = getNextValue(data.index++);\n            }\n            bits |= (resb>0 ? 1 : 0) * power;\n            power <<= 1;\n          }\n\n          dictionary[dictSize++] = f(bits);\n          c = dictSize-1;\n          enlargeIn--;\n          break;\n        case 1:\n          bits = 0;\n          maxpower = Math.pow(2,16);\n          power=1;\n          while (power!=maxpower) {\n            resb = data.val & data.position;\n            data.position >>= 1;\n            if (data.position == 0) {\n              data.position = resetValue;\n              data.val = getNextValue(data.index++);\n            }\n            bits |= (resb>0 ? 1 : 0) * power;\n            power <<= 1;\n          }\n          dictionary[dictSize++] = f(bits);\n          c = dictSize-1;\n          enlargeIn--;\n          break;\n        case 2:\n          return result.join('');\n      }\n\n      if (enlargeIn == 0) {\n        enlargeIn = Math.pow(2, numBits);\n        numBits++;\n      }\n\n      if (dictionary[c]) {\n        entry = dictionary[c];\n      } else {\n        if (c === dictSize) {\n          entry = w + w.charAt(0);\n        } else {\n          return null;\n        }\n      }\n      result.push(entry);\n\n      // Add w+entry[0] to the dictionary.\n      dictionary[dictSize++] = w + entry.charAt(0);\n      enlargeIn--;\n\n      w = entry;\n\n      if (enlargeIn == 0) {\n        enlargeIn = Math.pow(2, numBits);\n        numBits++;\n      }\n\n    }\n  }\n};\n  return LZString;\n})();\n\nif (typeof define === 'function' && define.amd) {\n  define(function () { return LZString; });\n} else if( typeof module !== 'undefined' && module != null ) {\n  module.exports = LZString\n}\n","// Load: When extension is first loaded into page.\n// Execute: When extension function is executed.\n// WidgetLoad: When plugins load\n// PluginExecute: When plugins fire\nimport { PredicateFunction } from 'types/function';\nimport LZString from 'lz-string';\n\nexport type PredicateFunctionType = null | PredicateFunction | Function;\n\nexport interface IPredicate {\n  // Actual extension actions to perform.\n  fn: PredicateFunctionType;\n\n  name: string;\n\n  // Passed timestamp, if applicable.\n  passedAt?: Date | null;\n\n  // Before extension load\n  beforeLoad?: PredicateFunctionType;\n  // After extension load\n  afterLoad?: PredicateFunctionType;\n\n  // Before execute\n  beforeExecute?: PredicateFunctionType;\n  // After execute\n  afterExecute?: PredicateFunctionType;\n\n  // Before widget load\n  beforeWidgetLoad?: PredicateFunctionType;\n  // After widget load\n  afterWidgetLoad?: PredicateFunctionType;\n\n  // Before load\n  beforeWidgetExecute?: PredicateFunctionType;\n  // After load\n  afterWidgetExecute?: PredicateFunctionType;\n}\n\nexport interface IPredicateParams {\n  fn: PredicateFunctionType;\n  name?: string;\n}\n\nexport class Predicate implements IPredicate {\n  fn: PredicateFunctionType;\n  name: string = '';\n  passedAt?: Date | null;\n\n  constructor(params: IPredicateParams) {\n    this.fn = params.fn;\n    this.name = params.name ? params.name : '';\n  }\n\n  run(): Date | void {\n    if (!this.fn) return;\n    this.passedAt = null;\n    if (!this.fn()) {\n      return;\n    }\n    this.passedAt = new Date();\n    return this.passedAt;\n  }\n\n  toJson(): object {\n    const obj: any = {\n      name: this.name,\n      passedAt: this.passedAt\n    };\n\n    if (this.fn) {\n      obj.fn = LZString.compressToBase64(String(this.fn));\n    }\n\n    return obj;\n  }\n}\n","export const UtilityDate = {\r\n  // Timestamp from MySQL source is UTC but JS Date function assumes local timezone.\r\n  // Explicitly tell JS that imported date is UTC so we're comparing two localized timestamps.\r\n  getUTCDate: (timestamp: string) => {\r\n    return new Date(timestamp + ' UTC');\r\n  }\r\n};\r\n\r\nexport default UtilityDate;\r\n","import { ActionFunction } from 'types/function';\nimport LZString from 'lz-string';\nimport Logger from '@/logger';\n\nexport type ActionFunctionType = null | ActionFunction | Function;\n\nexport interface IAction {\n  fn: ActionFunctionType;\n\n  name: string;\n}\n\nexport interface IActionParams {\n  fn: ActionFunctionType;\n  name?: string;\n}\n\nexport class Action implements IAction {\n  fn: ActionFunctionType;\n  name: string = '';\n\n  constructor(params: IActionParams) {\n    this.fn = params.fn;\n    this.name = params.name ? params.name : '';\n  }\n\n  run(): boolean {\n    if (!this.fn) return false;\n    Logger.log(`  Running '${this.name}' action.`);\n    this.fn();\n    return true;\n  }\n\n  toJson(): object {\n    const obj: any = {\n      name: this.name\n    };\n\n    if (this.fn) {\n      obj.fn = LZString.compressToBase64(String(this.fn));\n    }\n\n    return obj;\n  }\n}\n","import { Extension } from 'types/extension';\nimport Logger from '@/logger';\nimport { Predicate } from 'types/predicate';\nimport LZString from 'lz-string';\nimport DateUtility from '@/utility/date';\nimport { Action } from 'types/action';\n\ninterface IExtensionManager {\n  _extensions: Extension[];\n  _imports: any[];\n}\n\ninterface IExtensionParams {\n  extensions: Extension[];\n}\n\nexport class ExtensionManager implements IExtensionManager {\n  _extensions: Extension[] = [];\n  _imports: any[] = [];\n  constructor(params: IExtensionParams) {\n    this._extensions = params.extensions;\n  }\n\n  get extensions(): Extension[] {\n    return this._extensions;\n  }\n\n  get imports(): any[] {\n    return this._imports;\n  }\n\n  set imports(value) {\n    this._imports = value;\n  }\n\n  add(extension: Extension) {\n    this.extensions.push(extension);\n  }\n\n  addImports(extensions: any[]) {\n    this.imports = extensions;\n  }\n\n  processCustomImports() {\n    this.imports\n      // .filter((extension: any) => !extension.imported)\n      .forEach(\n        ({\n          name,\n          description,\n          enabled,\n          pivot,\n          actions,\n          predicates\n        }: {\n          name: string;\n          description: string;\n          enabled: boolean;\n          pivot: any;\n          actions: any;\n          predicates: any;\n        }) => {\n          const { enabled_at } = pivot;\n          let enabledBySite = false;\n          if (enabled_at) {\n            enabledBySite =\n              enabled_at && DateUtility.getUTCDate(enabled_at) <= new Date();\n          }\n\n          Logger.log(`Importing '${name}' extension.`);\n\n          const actionCollection: Action[] = [];\n          if (actions) {\n            actions.forEach((action: any) => {\n              let func = LZString.decompressFromBase64(action.function);\n\n              if (typeof func !== 'function') {\n                if (func.trim().startsWith('function')) {\n                  func = func.substring(\n                    func.indexOf('{') + 1,\n                    func.lastIndexOf('}')\n                  );\n                }\n                // Convert to function\n                func = Function(func);\n              }\n\n              actionCollection.push(\n                new Action({\n                  fn: func,\n                  name: action.name\n                })\n              );\n            });\n          }\n\n          // Check for function string\n          // regex: function\\s+\\w+\\(\\)\\s*{\n          // t.trim().startsWith('function')\n          // Function(t.substring(t.indexOf(\"{\") + 1, t.lastIndexOf(\"}\")))()\n\n          const predicateCollection: Predicate[] | null = [];\n          if (predicates) {\n            predicates.forEach((predicate: any) => {\n              let func = LZString.decompressFromBase64(predicate.function);\n              if (typeof func !== 'function') {\n                if (func.trim().startsWith('function')) {\n                  func = func.substring(\n                    func.indexOf('{') + 1,\n                    func.lastIndexOf('}')\n                  );\n                }\n                // Convert to function\n                func = Function(func);\n              }\n\n              const newPredicate = new Predicate({\n                fn: func,\n                name: predicate.name\n              });\n\n              predicateCollection.push(newPredicate);\n            });\n          }\n\n          // Check for matching extension\n          const match = this.extensions.find(\n            (extension: Extension) => extension.name === name\n          );\n\n          if (match) {\n            // Update existing\n            match.action = actionCollection;\n            match.description = description;\n            match.enabled = enabledBySite;\n            match.predicate = predicateCollection;\n          } else {\n            // Create new\n            const extension = new Extension({\n              action: actionCollection,\n              description: description,\n              enabled: enabledBySite,\n              name: name,\n              predicate: predicateCollection\n            });\n\n            this.add(extension);\n          }\n        }\n      );\n  }\n\n  processBuiltInImports() {\n    this.imports\n      .filter((extension: any) => extension.imported === true)\n      .forEach(({ name, pivot }: { name: string; pivot: any }) => {\n        const { enabled_at } = pivot;\n        let enabledBySite = false;\n        if (enabled_at) {\n          enabledBySite =\n            enabled_at && DateUtility.getUTCDate(enabled_at) <= new Date();\n        }\n\n        // Check for matching name\n        const match = this.extensions.find(\n          (extension: Extension) => extension.name === name\n        );\n        if (match && match.enabled !== enabledBySite) {\n          Logger.log(\n            `${enabledBySite ? 'Enabling' : 'Disabling'} built-in '${\n              match.name\n            }' extension (site override).`\n          );\n          match.enabled = enabledBySite;\n        }\n      });\n  }\n\n  /**\n   * Run all 'enabled' Extensions.\n   */\n  executeExtensions() {\n    this.extensions\n      .filter((extension: Extension) => extension.enabled)\n      .forEach((extension: Extension, index: number) => {\n        Logger.log(\n          `Executing '${extension.name ? extension.name : index}' extension.`\n        );\n        extension.execute();\n      });\n  }\n}\n","import { Action } from 'types/action';\n\nexport const Export = new Action({\n  fn: () => {\n    const getNodeValue = ({ node, name, type }) => {\n      if (type === 'attribute') {\n        return node.getAttribute(name);\n      }\n\n      if (type === 'property') {\n        return node[name];\n      }\n\n      if (type === 'style') {\n        const value = node.style.getPropertyValue(name);\n        if (value && value !== '') {\n          return value;\n        }\n        return window.getComputedStyle(node).getPropertyValue(name);\n      }\n\n      return '';\n    };\n\n    const getElementText = ({ element, maxLength = undefined }) => {\n      if (!element) {\n        return '';\n      }\n\n      const values: any = [];\n\n      const label = getNodeValue({\n        node: element,\n        name: 'aria-label',\n        type: 'attribute'\n      });\n      if (label) {\n        values.push(label);\n      }\n\n      const labelledBy = getNodeValue({\n        node: element,\n        name: 'aria-labelledby',\n        type: 'attribute'\n      });\n      if (labelledBy) {\n        if (document.getElementById(labelledBy)) {\n          const labelOfLabelledBy = getElementText({\n            element: document.getElementById(labelledBy),\n            maxLength\n          });\n          if (labelOfLabelledBy) {\n            values.push(labelOfLabelledBy);\n          }\n        }\n      }\n\n      const valueText = getNodeValue({\n        node: element,\n        name: 'aria-valuetext',\n        type: 'attribute'\n      });\n      if (valueText) {\n        values.push(valueText);\n      }\n\n      const altText = getNodeValue({\n        node: element,\n        name: 'alt',\n        type: 'attribute'\n      });\n      if (altText) {\n        values.push(altText);\n      }\n\n      const text = element.textContent;\n      if (text) {\n        values.push(text);\n      }\n\n      const href = element.href;\n      if (href) {\n        values.push(href);\n      }\n\n      // Return first element.\n      return values.length > 0 ? String(values[0]).substring(0, maxLength) : '';\n    };\n\n    const setNodeValue = ({\n      node,\n      name,\n      type,\n      value,\n      priority = undefined\n    }) => {\n      if (type === 'attribute') {\n        node.setAttribute(name, value);\n      }\n\n      if (type === 'property') {\n        node[name] = value;\n      }\n\n      if (type === 'style') {\n        node.style.setProperty(name, value, priority);\n      }\n    };\n\n    const nodes = document.querySelectorAll(\n      [\n        'button',\n        'label',\n        'input',\n        'select',\n        'textarea',\n        'legend',\n        'span',\n        'a',\n        'h1',\n        'h2',\n        'h3',\n        'h4',\n        'h5',\n        'h6'\n      ].join(', ')\n    );\n\n    if (!nodes || nodes.length === 0) return;\n\n    nodes.forEach((element: Element) => {\n      // Check for existing label\n      if (element.getAttribute('aria-label')) return;\n\n      // Get best text for label.\n      const text = getElementText({ element });\n      // Set value.\n      setNodeValue({\n        node: element,\n        type: 'attribute',\n        name: 'aria-label',\n        value: text\n      });\n    });\n  },\n  name: 'Add Aria Labels'\n});\n\nexport default Export;\n","import { Predicate } from 'types/predicate';\n\n/**\n * Determine if parent page is based on WordPress.\n */\nexport const HasWordpress = new Predicate({\n  fn: () => {\n    const node = document.querySelectorAll('meta[content^=\"WordPress\"]');\n    if (node && node[0]) {\n      return !!node[0];\n    }\n    return false;\n  },\n  name: 'Has Wordpress'\n});\n\nexport default HasWordpress;\n","import { Extension } from 'types/extension';\nimport AddAriaLabels from 'actions/AddAriaLabels';\nimport HasWordpress from 'predicates/HasWordpress';\n\nexport const AddMissingAriaLabels = new Extension({\n  action: AddAriaLabels,\n  description:\n    \"Adds missing 'aria-label' attributes with most relevant text value to all buttons, labels, and primary text elements.\",\n  name: 'Add Missing Aria Labels',\n  predicate: [HasWordpress]\n});\n\nexport default AddMissingAriaLabels;\n","import { Action } from 'types/action';\n\n/**\n * Add screen reader classes.\n */\nexport const Export = new Action({\n  fn: () => {\n    const addClass = ({ node, name }) => {\n      if (node instanceof NodeList) {\n        node.forEach(nodeValue => addClass({ node: nodeValue, name }));\n        return;\n      }\n      if (Array.isArray(name)) {\n        name.forEach(nameValue => addClass({ node, name: nameValue }));\n        return;\n      }\n      if (node.classList) {\n        node.classList.add(name);\n      } else if (!hasClass({ node, name })) {\n        node.className += ' ' + name;\n      }\n    };\n\n    const hasClass = ({ node, name }) => {\n      if (node.classList) {\n        return node.classList.contains(name);\n      } else {\n        return !!node.className.match(new RegExp('(\\\\s|^)' + name + '(\\\\s|$)'));\n      }\n    };\n\n    const nodes = document.querySelectorAll(\n      [\n        'button',\n        'label',\n        'input',\n        'span',\n        'a',\n        'h1',\n        'h2',\n        'h3',\n        'h4',\n        'h5',\n        'h6'\n      ].join(', ')\n    );\n    if (!nodes || nodes.length === 0) return;\n\n    nodes.forEach((element: Element) => {\n      // sr-only\n      if (!hasClass({ node: element, name: 'sr-only' })) {\n        addClass({ node: element, name: 'sr-only' });\n      }\n      // sr-only-focusable\n      if (!hasClass({ node: element, name: 'sr-only-focusable' })) {\n        addClass({ node: element, name: 'sr-only-focusable' });\n      }\n    });\n  },\n  name: 'Add Sr Classes'\n});\n\nexport default Export;\n","import { Predicate } from 'types/predicate';\n\n/**\n * Determine if Bootstrap is running.\n */\nexport const HasBootstrap = new Predicate({\n  fn: () => !!window['bootstrap'],\n  name: 'Has Bootstrap'\n});\n\nexport default HasBootstrap;\n","import { Extension } from 'types/extension';\nimport AddSrClasses from 'actions/AddSrClasses';\nimport HasBootstrap from 'predicates/HasBootstrap';\n\nexport const AddScreenReaderOnlyClasses = new Extension({\n  action: AddSrClasses,\n  description:\n    \"Adds 'sr-only' and 'sr-only-focusable' attributes to all buttons, labels, and primary text elements.\",\n  enabled: false,\n  name: 'Add Screen Reader Only Classes',\n  predicate: [HasBootstrap]\n});\n\nexport default AddScreenReaderOnlyClasses;\n","import { Action } from 'types/action';\n\nexport const Export = new Action({\n  fn: () => {\n    if (window['jQuery'] && window['jQuery'].fx) {\n      window['jQuery'].fx.off = true;\n    }\n  },\n  name: 'Disable jQuery Fx'\n});\n\nexport default Export;\n","import { Predicate } from 'types/predicate';\n\n/**\n * Determine if jQuery is running.\n */\nexport const HasJquery = new Predicate({\n  fn: () => !!window['jQuery'],\n  name: 'Has jQuery'\n});\n\nexport default HasJquery;\n","import { Extension } from 'types/extension';\nimport DisableJqueryFx from 'actions/DisableJqueryFx';\nimport HasJquery from 'predicates/HasJquery';\n\nexport const DisableAnimations = new Extension({\n  action: DisableJqueryFx,\n  description: 'Disables all jQuery animations.',\n  name: 'Disable jQuery Animations',\n  predicate: HasJquery\n});\n\nexport default DisableAnimations;\n","import { ExtensionManager } from './extension-manager';\r\nimport AddMissingAriaLabels from 'extensions/js/wordpress/AddAriaLabels';\r\nimport AddScreenReaderOnlyClasses from 'extensions/css/bootstrap/AddScreenReaderOnlyClasses';\r\nimport DisableAnimations from 'extensions/js/jquery/DisableAnimations';\r\n\r\nconst extensions = (function() {\r\n  return {\r\n    manager: new ExtensionManager({\r\n      extensions: [\r\n        AddMissingAriaLabels,\r\n        AddScreenReaderOnlyClasses,\r\n        DisableAnimations\r\n      ]\r\n    })\r\n  };\r\n})();\r\n\r\nexport default extensions;\r\n"],"names":["Logger","[object Object]","message","console","debug","pkg","info","log","warn","Extension","params","this","action","description","enabled","undefined","name","predicate","Array","isArray","passedAt","runPredicates","predicatesPassed","firedAt","runActions","Date","forEach","run","JSON","stringify","toObject","actions","predicates","map","toJson","push","obj","length","LZString","f","String","fromCharCode","keyStrBase64","keyStrUriSafe","baseReverseDic","getBaseValue","alphabet","character","i","charAt","compressToBase64","input","res","_compress","a","decompressFromBase64","_decompress","index","compressToUTF16","decompressFromUTF16","compressed","charCodeAt","compressToUint8Array","uncompressed","compress","buf","Uint8Array","TotalLen","current_value","decompressFromUint8Array","decompress","result","c","join","compressToEncodedURIComponent","decompressFromEncodedURIComponent","replace","bitsPerChar","getCharFromInt","value","ii","context_dictionary","context_dictionaryToCreate","context_c","context_wc","context_w","context_enlargeIn","context_dictSize","context_numBits","context_data","context_data_val","context_data_position","Object","prototype","hasOwnProperty","call","Math","pow","resetValue","getNextValue","w","bits","resb","maxpower","power","dictionary","enlargeIn","dictSize","numBits","entry","data","val","position","module","Predicate","fn","UtilityDate","timestamp","Action","ExtensionManager","_extensions","extensions","imports","_imports","extension","pivot","enabled_at","enabledBySite","DateUtility","actionCollection","func","function","trim","startsWith","substring","indexOf","lastIndexOf","Function","predicateCollection","newPredicate","match","find","add","filter","imported","execute","Export","getNodeValue","node","type","getAttribute","style","getPropertyValue","window","getComputedStyle","getElementText","element","maxLength","values","label","labelledBy","document","getElementById","labelOfLabelledBy","valueText","altText","text","textContent","href","nodes","querySelectorAll","priority","setAttribute","setProperty","setNodeValue","HasWordpress","AddMissingAriaLabels","AddAriaLabels","addClass","NodeList","nodeValue","nameValue","classList","hasClass","className","contains","RegExp","HasBootstrap","AddScreenReaderOnlyClasses","AddSrClasses","fx","off","HasJquery","DisableAnimations","DisableJqueryFx","manager"],"mappings":"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"}